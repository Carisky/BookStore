@model BookStore.Models.BookFilterViewModel

@{
    ViewData["Title"] = "Book Filter";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

<h1>@ViewData["Title"]</h1>

<form id="filterForm" method="get" action="@Url.Action("FilterBooks", "Book")">
    <div class="form-group">
        <label for="title">Title:</label>
        <input type="text" class="form-control" id="title" name="Title" />
        <span class="text-danger" id="titleError"></span>
    </div>
    <div class="form-group">
        <label for="author">Author:</label>
        <input type="text" class="form-control" id="author" name="Author" />
        <span asp-validation-for="Author" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="style">Style:</label>
        <input type="text" class="form-control" id="style" name="Style"  />
        <span asp-validation-for="Style" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="theme">Theme:</label>
        <input type="text" class="form-control" id="theme" name="Theme"  />
        <span asp-validation-for="Theme" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="publishingHouse">Publishing House:</label>
        <input type="text" class="form-control" id="publishingHouse" name="PublishingHouse" />
        <span asp-validation-for="PublishingHouse" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="minPages">Minimum Pages:</label>
        <input type="number" class="form-control" id="minPages" name="MinPages" data-validation="required" />
        <span class="text-danger" id="minPagesError"></span>
        <span asp-validation-for="MinPages" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="maxPages">Maximum Pages:</label>
        <input type="number" class="form-control" id="maxPages" name="MaxPages" data-validation="required" />
        <span class="text-danger" id="maxPagesError"></span>
        <span asp-validation-for="MaxPages" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="minCost">Minimum Cost:</label>
        <input type="number" class="form-control" id="minCost" name="MinCost"  />
        <span asp-validation-for="MinCost" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="maxCost">Maximum Cost:</label>
        <input type="number" class="form-control" id="maxCost" name="MaxCost"  />
        <span asp-validation-for="MaxCost" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="publishedAt">Published At:</label>
        <input type="date" class="form-control" id="publishedAt" name="PublishedAt"  />
        <span asp-validation-for="PublishedAt" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Filter</button>
</form>


<script>
    function validateForm() {
        var form = document.getElementById("filterForm");
        var elements = form.elements;
        var isValid = true;

        for (var i = 0; i < elements.length; i++) {
            var element = elements[i];
            var validation = element.dataset.validation;

            if (validation === "required") {
                if (element.value.trim() === "") {
                    isValid = false;
                    showError(element);
                } else {
                    hideError(element);
                }
            }
            // Add additional validation rules as needed
        }

        return isValid;
    }

    function showError(element) {
        var errorId = element.id + "Error";
        var errorElement = document.getElementById(errorId);
        if (errorElement) {
            errorElement.innerText = element.dataset.validationMessage || "Field is required";
        }
    }

    function hideError(element) {
        var errorId = element.id + "Error";
        var errorElement = document.getElementById(errorId);
        if (errorElement) {
            errorElement.innerText = "";
        }
    }

    document.getElementById("filterForm").onsubmit = validateForm;
</script>

